{"version":3,"sources":["App.js","Components/Calc.js","Components/Output.js","serviceWorker.js","index.js"],"names":["App","onClick","button","calculate","reset","setState","result","state","check","includes","replace","eval","e","className","this","Component","Calc","name","props","target","Output","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef477f07.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Calc from \"./Components/Calc\";\nimport Output from \"./Components/Output\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: \"\",\n    };\n  }\n  onClick = (button) => {\n    if (button === \"=\") {\n      this.calculate();\n    } else if (button === \"clear\") {\n      this.reset();\n    } else {\n      this.setState({\n        result: this.state.result + button,\n      });\n    }\n  };\n\n  calculate = () => {\n    var check = \"\";\n    if (this.state.result.includes(\"--\")) {\n      check = this.state.result.replace(\"--\", \"+\");\n    } else {\n      check = this.state.result;\n    }\n\n    try {\n      this.setState({\n        result: (eval(check) || \"\") + \"\",\n      });\n    } catch (e) {\n      this.setState({\n        result: \"error\",\n      });\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      result: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className = \"calc\">\n        <Output result={this.state.result} />\n        <Calc onClick={this.onClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass Calc extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div >\r\n          <section className=\"formula\">\r\n            <button className=\"but\" name =\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\r\n            <button className=\"but\" name =\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\r\n            <button className=\"but\" name =\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\r\n            <button className=\"but4\" name =\"/\" onClick={e => this.props.onClick(e.target.name)}>/</button>\r\n            <button className=\"but\" name =\"4\" onClick={e => this.props.onClick(e.target.name)}>4 </button>\r\n            <button className=\"but\" name =\"5\" onClick={e => this.props.onClick(e.target.name)}>5 </button>\r\n            <button className=\"but\" name =\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\r\n            <button className=\"but4\" name =\"*\" onClick={e => this.props.onClick(e.target.name)}>X</button>\r\n            <button className=\"but\" name =\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\r\n            <button className=\"but\" name =\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\r\n            <button className=\"but\" name =\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\r\n            <button className=\"but4\" name =\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button>\r\n            <button className=\"but\" name =\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\r\n            <button className=\"but\" name =\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\r\n            <button className=\"but\" name =\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\r\n            <button className=\"but4\" name =\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button>\r\n            <button className=\"but2\" name =\"clear\" onClick={e => this.props.onClick(e.target.name)}>clear</button>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calc;\r\n","import React ,{Component} from 'react'\r\nimport \"../App.css\";\r\n\r\n\r\nclass Output extends Component {\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className = \"result\">\r\n                <p>{this.props.result}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Output;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}